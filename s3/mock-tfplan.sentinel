import "strings"
import "types"

_modules = {
	"root": {
		"data":      {},
		"path":      [],
		"resources": {},
	},

	"module.s3-web": {
		"data": {
			"aws_iam_policy_document": {
				"allow_read_access": {
					0: {
						"applied": {
							"override_json":             null,
							"override_policy_documents": null,
							"policy_id":                 null,
							"source_json":               null,
							"source_policy_documents":   null,
							"statement": [
								{
									"actions": [
										"s3:GetObject",
										"s3:ListBucket",
									],
									"condition":      [],
									"effect":         null,
									"not_actions":    null,
									"not_principals": [],
									"not_resources":  null,
									"principals": [
										{
											"identifiers": [
												"*",
											],
											"type": "AWS",
										},
									],
									"resources": [
										null,
										null,
									],
									"sid": null,
								},
							],
							"version": null,
						},
						"destroy": false,
						"diff": {
							"id": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"json": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"override_json": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"override_policy_documents": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"policy_id": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"source_json": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"source_policy_documents": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"statement.#": {
								"computed": false,
								"new":      "1",
								"old":      "",
							},
							"statement.0.%": {
								"computed": false,
								"new":      "9",
								"old":      "",
							},
							"statement.0.actions.#": {
								"computed": false,
								"new":      "2",
								"old":      "",
							},
							"statement.0.actions.0": {
								"computed": false,
								"new":      "s3:GetObject",
								"old":      "",
							},
							"statement.0.actions.1": {
								"computed": false,
								"new":      "s3:ListBucket",
								"old":      "",
							},
							"statement.0.condition.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"statement.0.effect": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"statement.0.not_actions": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"statement.0.not_principals.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"statement.0.not_resources": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"statement.0.principals.#": {
								"computed": false,
								"new":      "1",
								"old":      "",
							},
							"statement.0.principals.0.%": {
								"computed": false,
								"new":      "2",
								"old":      "",
							},
							"statement.0.principals.0.identifiers.#": {
								"computed": false,
								"new":      "1",
								"old":      "",
							},
							"statement.0.principals.0.identifiers.0": {
								"computed": false,
								"new":      "*",
								"old":      "",
							},
							"statement.0.principals.0.type": {
								"computed": false,
								"new":      "AWS",
								"old":      "",
							},
							"statement.0.resources.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"statement.0.sid": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"version": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
						},
						"requires_new": false,
					},
				},
			},
		},
		"path": [
			"s3-web",
		],
		"resources": {
			"aws_s3_bucket": {
				"static_website": {
					0: {
						"applied": {
							"bucket":        "mahvish-website",
							"bucket_prefix": null,
							"force_destroy": true,
							"tags": {
								"Environment": "production",
								"Name":        "static_website",
							},
							"tags_all": {
								"Environment": "production",
								"Name":        "static_website",
							},
							"timeouts": null,
						},
						"destroy": false,
						"diff": {
							"acceleration_status": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"acl": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"arn": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"bucket": {
								"computed": false,
								"new":      "mahvish-website",
								"old":      "",
							},
							"bucket_domain_name": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"bucket_prefix": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"bucket_regional_domain_name": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"cors_rule.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"force_destroy": {
								"computed": false,
								"new":      "true",
								"old":      "",
							},
							"grant.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"hosted_zone_id": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"id": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"lifecycle_rule.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"logging.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"object_lock_configuration.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"object_lock_enabled": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"policy": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"region": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"replication_configuration.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"request_payer": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"server_side_encryption_configuration.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"tags.%": {
								"computed": false,
								"new":      "2",
								"old":      "",
							},
							"tags.Environment": {
								"computed": false,
								"new":      "production",
								"old":      "",
							},
							"tags.Name": {
								"computed": false,
								"new":      "static_website",
								"old":      "",
							},
							"tags_all.%": {
								"computed": false,
								"new":      "2",
								"old":      "",
							},
							"tags_all.Environment": {
								"computed": false,
								"new":      "production",
								"old":      "",
							},
							"tags_all.Name": {
								"computed": false,
								"new":      "static_website",
								"old":      "",
							},
							"timeouts": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"versioning.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"website.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"website_domain": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"website_endpoint": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
						},
						"requires_new": false,
					},
				},
			},
			"aws_s3_bucket_acl": {
				"example_bucket_acl": {
					0: {
						"applied": {
							"acl": "public-read",
							"expected_bucket_owner": null,
						},
						"destroy": false,
						"diff": {
							"access_control_policy.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"acl": {
								"computed": false,
								"new":      "public-read",
								"old":      "",
							},
							"bucket": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"expected_bucket_owner": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"id": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
						},
						"requires_new": false,
					},
				},
			},
			"aws_s3_bucket_policy": {
				"allow_read_access": {
					0: {
						"applied": {},
						"destroy": false,
						"diff": {
							"bucket": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"id": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"policy": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
						},
						"requires_new": false,
					},
				},
			},
			"aws_s3_bucket_website_configuration": {
				"website_config": {
					0: {
						"applied": {
							"error_document":        [],
							"expected_bucket_owner": null,
							"index_document": [
								{
									"suffix": "index.html",
								},
							],
							"redirect_all_requests_to": [],
						},
						"destroy": false,
						"diff": {
							"bucket": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"error_document.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"expected_bucket_owner": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"id": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"index_document.#": {
								"computed": false,
								"new":      "1",
								"old":      "",
							},
							"index_document.0.%": {
								"computed": false,
								"new":      "1",
								"old":      "",
							},
							"index_document.0.suffix": {
								"computed": false,
								"new":      "index.html",
								"old":      "",
							},
							"redirect_all_requests_to.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"routing_rule.#": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"routing_rules": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"website_domain": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"website_endpoint": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
						},
						"requires_new": false,
					},
				},
			},
		},
	},
}

module_paths = [
	[],
	[
		"s3-web",
	],
]

terraform_version = "1.3.9"

variables = {
	"tag_n":      "static_website",
	"web_b_name": "mahvish-website",
}

module = func(path) {
	if types.type_of(path) is not "list" {
		error("expected list, got", types.type_of(path))
	}

	if length(path) < 1 {
		return _modules.root
	}

	addr = []
	for path as p {
		append(addr, "module")
		append(addr, p)
	}

	return _modules[strings.join(addr, ".")]
}

data = _modules.root.data
path = _modules.root.path
resources = _modules.root.resources
